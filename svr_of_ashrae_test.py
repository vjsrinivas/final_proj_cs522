# -*- coding: utf-8 -*-
"""SVR of ASHRAE_Test

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15VP4XxaDkqdgc6OvUl6aFy9XB8sI4HgJ

# Reduce Memory Footprint

# Visualization
"""

# TODO...
train

weather_train

"""# Load Pre-Processed Data (Cleaned Up Data)

# New section
"""

import gdown
import pandas as pd
import numpy as np

ashrae_url = "https://drive.google.com/uc?id=1UlIpiR3Y6XiSWLhJGuaogrFgYsJns2FN"
output = "cleaned_ashrae.csv"
gdown.download(ashrae_url, output, quiet=False)

clean_train = pd.read_csv('cleaned_ashrae.csv') # with ALL 14 features

# reduce memory:
clean_train['timestamp'] = clean_train['timestamp'].astype(np.int64)
clean_train['meter'] = clean_train['meter'].astype(np.uint8)
clean_train['site_id'] = clean_train['site_id'].astype(np.int64)
clean_train['primary_use'] = clean_train['primary_use'].astype(np.int64)

clean_train = clean_train.drop(columns='floor_count')
clean_train = clean_train.drop(columns='year_built')
clean_train # NOTE: meter_reading is the target variable so is the 14th feature

clean_train.info()

#Taking random 1% sample of the data as test sample
sample_train=clean_train.sample(frac=0.010)

#The new shape of the data
sample_train.shape

#Spliting into features and target, so we remove the target
X = sample_train.drop('meter_reading', axis = 1)
Y = sample_train['meter_reading']

X.shape

Y.shape

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)

#Standardizing the features we using standard scalar
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)

X_train_scaled = scaler.transform(X_train)
X_test_scaled = scaler.transform(X_test)

from sklearn.svm import SVR

svr_rbf = SVR(kernel='rbf')

svr_rbf.fit(X_train_scaled,Y_train)

y_pred = svr_rbf.predict(X_test_scaled)

#Converting the negative values to zero 
y_pred[y_pred < 0] = 0

from sklearn.metrics import mean_squared_log_error

rmsle = mean_squared_log_error(Y_test, y_pred, squared=False)
rmsle